<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        html,body{
    width: 100%;
    height: 100%;
}
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
#map{
    width: 100%;
    height:100%;
}
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.css" integrity="sha512-h9FcoyWjHcOcmEVkxOfTLnmZFWIH0iZhZT1H2TbOq55xssQGEJHEaIm+PgoUaZbRvQTNTluNOEfb1ZRy6D3BOw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<body>
    <div id="map"></div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.js" integrity="sha512-puJW3E/qXDqYp9IfhAI54BJEaWIfloJ7JWs7OeD5i6ruC9JZL1gERT1wjtwXFlh7CjE7ZJ+/vcRZRkIYIb6p4g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdn.socket.io/4.7.5/socket.io.min.js" integrity="sha384-2huaZvOR9iDzHqslqwpR87isEmrfxqyWOF7hr7BY6KG0+hVKLoEXMPUJw3ynWuhO" crossorigin="anonymous"></script>
   <script>
    const socket = io();
    console.log("hey")
    if(navigator.geolocation){



        navigator.geolocation.watchPosition((position)=>{
            const {latitude, longitude} = position.coords;
            socket.emit("send-location", {latitude, longitude});
        },(error)=>{
            console.error(error)
        },{
        enableHighAccuracy: true,
        timeout: 5000,
        maximumAge: 0
    }
    )

}
   
   const map = L.map("map").setView([0,0],16);
   L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{

    attribution:"Tanishq sonwane"

   }).addTo(map)

const markers = {};
socket.on("received location",(data)=>{
    const {Id,latitude,longitude} = data;
    map.setView([latitude,longitude]);
    if(markers[Id]){
    markers[Id].setLatLng([latitude,longitude]);
}
else{
    markers[Id]= L.marker([latitude,longitude]).addTo(map);
}
});
socket.on("user-disconnected",(Id)=>{
if(markers[Id]){
    map.removeLayer(markers[Id]);
    delete markers[Id];
}

});

   </script>
</body>
</html>